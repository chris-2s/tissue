/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexRouteImport } from './routes/_index/route'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as IndexIndexImport } from './routes/_index/index'
import { Route as IndexSettingRouteImport } from './routes/_index/setting/route'
import { Route as IndexVideoIndexImport } from './routes/_index/video/index'
import { Route as IndexUserIndexImport } from './routes/_index/user/index'
import { Route as IndexSubscribeIndexImport } from './routes/_index/subscribe/index'
import { Route as IndexSettingIndexImport } from './routes/_index/setting/index'
import { Route as IndexSearchIndexImport } from './routes/_index/search/index'
import { Route as IndexScheduleIndexImport } from './routes/_index/schedule/index'
import { Route as IndexMenuIndexImport } from './routes/_index/menu/index'
import { Route as IndexHomeIndexImport } from './routes/_index/home/index'
import { Route as IndexHistoryIndexImport } from './routes/_index/history/index'
import { Route as IndexFileIndexImport } from './routes/_index/file/index'
import { Route as IndexDownloadIndexImport } from './routes/_index/download/index'
import { Route as IndexAboutIndexImport } from './routes/_index/about/index'
import { Route as IndexSettingNotifyImport } from './routes/_index/setting/notify'
import { Route as IndexSettingFileImport } from './routes/_index/setting/file'
import { Route as IndexSettingDownloadImport } from './routes/_index/setting/download'
import { Route as IndexSettingAppImport } from './routes/_index/setting/app'
import { Route as IndexHomeDetailImport } from './routes/_index/home/detail'

// Create/Update Routes

const IndexRouteRoute = IndexRouteImport.update({
  id: '/_index',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const IndexIndexRoute = IndexIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => IndexRouteRoute,
} as any)

const IndexSettingRouteRoute = IndexSettingRouteImport.update({
  id: '/setting',
  path: '/setting',
  getParentRoute: () => IndexRouteRoute,
} as any)

const IndexVideoIndexRoute = IndexVideoIndexImport.update({
  id: '/video/',
  path: '/video/',
  getParentRoute: () => IndexRouteRoute,
} as any)

const IndexUserIndexRoute = IndexUserIndexImport.update({
  id: '/user/',
  path: '/user/',
  getParentRoute: () => IndexRouteRoute,
} as any)

const IndexSubscribeIndexRoute = IndexSubscribeIndexImport.update({
  id: '/subscribe/',
  path: '/subscribe/',
  getParentRoute: () => IndexRouteRoute,
} as any)

const IndexSettingIndexRoute = IndexSettingIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => IndexSettingRouteRoute,
} as any)

const IndexSearchIndexRoute = IndexSearchIndexImport.update({
  id: '/search/',
  path: '/search/',
  getParentRoute: () => IndexRouteRoute,
} as any)

const IndexScheduleIndexRoute = IndexScheduleIndexImport.update({
  id: '/schedule/',
  path: '/schedule/',
  getParentRoute: () => IndexRouteRoute,
} as any)

const IndexMenuIndexRoute = IndexMenuIndexImport.update({
  id: '/menu/',
  path: '/menu/',
  getParentRoute: () => IndexRouteRoute,
} as any)

const IndexHomeIndexRoute = IndexHomeIndexImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => IndexRouteRoute,
} as any)

const IndexHistoryIndexRoute = IndexHistoryIndexImport.update({
  id: '/history/',
  path: '/history/',
  getParentRoute: () => IndexRouteRoute,
} as any)

const IndexFileIndexRoute = IndexFileIndexImport.update({
  id: '/file/',
  path: '/file/',
  getParentRoute: () => IndexRouteRoute,
} as any)

const IndexDownloadIndexRoute = IndexDownloadIndexImport.update({
  id: '/download/',
  path: '/download/',
  getParentRoute: () => IndexRouteRoute,
} as any)

const IndexAboutIndexRoute = IndexAboutIndexImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => IndexRouteRoute,
} as any)

const IndexSettingNotifyRoute = IndexSettingNotifyImport.update({
  id: '/notify',
  path: '/notify',
  getParentRoute: () => IndexSettingRouteRoute,
} as any)

const IndexSettingFileRoute = IndexSettingFileImport.update({
  id: '/file',
  path: '/file',
  getParentRoute: () => IndexSettingRouteRoute,
} as any)

const IndexSettingDownloadRoute = IndexSettingDownloadImport.update({
  id: '/download',
  path: '/download',
  getParentRoute: () => IndexSettingRouteRoute,
} as any)

const IndexSettingAppRoute = IndexSettingAppImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => IndexSettingRouteRoute,
} as any)

const IndexHomeDetailRoute = IndexHomeDetailImport.update({
  id: '/home/detail',
  path: '/home/detail',
  getParentRoute: () => IndexRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_index': {
      id: '/_index'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRoute
    }
    '/_index/setting': {
      id: '/_index/setting'
      path: '/setting'
      fullPath: '/setting'
      preLoaderRoute: typeof IndexSettingRouteImport
      parentRoute: typeof IndexRouteImport
    }
    '/_index/': {
      id: '/_index/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexIndexImport
      parentRoute: typeof IndexRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/_index/home/detail': {
      id: '/_index/home/detail'
      path: '/home/detail'
      fullPath: '/home/detail'
      preLoaderRoute: typeof IndexHomeDetailImport
      parentRoute: typeof IndexRouteImport
    }
    '/_index/setting/app': {
      id: '/_index/setting/app'
      path: '/app'
      fullPath: '/setting/app'
      preLoaderRoute: typeof IndexSettingAppImport
      parentRoute: typeof IndexSettingRouteImport
    }
    '/_index/setting/download': {
      id: '/_index/setting/download'
      path: '/download'
      fullPath: '/setting/download'
      preLoaderRoute: typeof IndexSettingDownloadImport
      parentRoute: typeof IndexSettingRouteImport
    }
    '/_index/setting/file': {
      id: '/_index/setting/file'
      path: '/file'
      fullPath: '/setting/file'
      preLoaderRoute: typeof IndexSettingFileImport
      parentRoute: typeof IndexSettingRouteImport
    }
    '/_index/setting/notify': {
      id: '/_index/setting/notify'
      path: '/notify'
      fullPath: '/setting/notify'
      preLoaderRoute: typeof IndexSettingNotifyImport
      parentRoute: typeof IndexSettingRouteImport
    }
    '/_index/about/': {
      id: '/_index/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof IndexAboutIndexImport
      parentRoute: typeof IndexRouteImport
    }
    '/_index/download/': {
      id: '/_index/download/'
      path: '/download'
      fullPath: '/download'
      preLoaderRoute: typeof IndexDownloadIndexImport
      parentRoute: typeof IndexRouteImport
    }
    '/_index/file/': {
      id: '/_index/file/'
      path: '/file'
      fullPath: '/file'
      preLoaderRoute: typeof IndexFileIndexImport
      parentRoute: typeof IndexRouteImport
    }
    '/_index/history/': {
      id: '/_index/history/'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof IndexHistoryIndexImport
      parentRoute: typeof IndexRouteImport
    }
    '/_index/home/': {
      id: '/_index/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof IndexHomeIndexImport
      parentRoute: typeof IndexRouteImport
    }
    '/_index/menu/': {
      id: '/_index/menu/'
      path: '/menu'
      fullPath: '/menu'
      preLoaderRoute: typeof IndexMenuIndexImport
      parentRoute: typeof IndexRouteImport
    }
    '/_index/schedule/': {
      id: '/_index/schedule/'
      path: '/schedule'
      fullPath: '/schedule'
      preLoaderRoute: typeof IndexScheduleIndexImport
      parentRoute: typeof IndexRouteImport
    }
    '/_index/search/': {
      id: '/_index/search/'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof IndexSearchIndexImport
      parentRoute: typeof IndexRouteImport
    }
    '/_index/setting/': {
      id: '/_index/setting/'
      path: '/'
      fullPath: '/setting/'
      preLoaderRoute: typeof IndexSettingIndexImport
      parentRoute: typeof IndexSettingRouteImport
    }
    '/_index/subscribe/': {
      id: '/_index/subscribe/'
      path: '/subscribe'
      fullPath: '/subscribe'
      preLoaderRoute: typeof IndexSubscribeIndexImport
      parentRoute: typeof IndexRouteImport
    }
    '/_index/user/': {
      id: '/_index/user/'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof IndexUserIndexImport
      parentRoute: typeof IndexRouteImport
    }
    '/_index/video/': {
      id: '/_index/video/'
      path: '/video'
      fullPath: '/video'
      preLoaderRoute: typeof IndexVideoIndexImport
      parentRoute: typeof IndexRouteImport
    }
  }
}

// Create and export the route tree

interface IndexSettingRouteRouteChildren {
  IndexSettingAppRoute: typeof IndexSettingAppRoute
  IndexSettingDownloadRoute: typeof IndexSettingDownloadRoute
  IndexSettingFileRoute: typeof IndexSettingFileRoute
  IndexSettingNotifyRoute: typeof IndexSettingNotifyRoute
  IndexSettingIndexRoute: typeof IndexSettingIndexRoute
}

const IndexSettingRouteRouteChildren: IndexSettingRouteRouteChildren = {
  IndexSettingAppRoute: IndexSettingAppRoute,
  IndexSettingDownloadRoute: IndexSettingDownloadRoute,
  IndexSettingFileRoute: IndexSettingFileRoute,
  IndexSettingNotifyRoute: IndexSettingNotifyRoute,
  IndexSettingIndexRoute: IndexSettingIndexRoute,
}

const IndexSettingRouteRouteWithChildren =
  IndexSettingRouteRoute._addFileChildren(IndexSettingRouteRouteChildren)

interface IndexRouteRouteChildren {
  IndexSettingRouteRoute: typeof IndexSettingRouteRouteWithChildren
  IndexIndexRoute: typeof IndexIndexRoute
  IndexHomeDetailRoute: typeof IndexHomeDetailRoute
  IndexAboutIndexRoute: typeof IndexAboutIndexRoute
  IndexDownloadIndexRoute: typeof IndexDownloadIndexRoute
  IndexFileIndexRoute: typeof IndexFileIndexRoute
  IndexHistoryIndexRoute: typeof IndexHistoryIndexRoute
  IndexHomeIndexRoute: typeof IndexHomeIndexRoute
  IndexMenuIndexRoute: typeof IndexMenuIndexRoute
  IndexScheduleIndexRoute: typeof IndexScheduleIndexRoute
  IndexSearchIndexRoute: typeof IndexSearchIndexRoute
  IndexSubscribeIndexRoute: typeof IndexSubscribeIndexRoute
  IndexUserIndexRoute: typeof IndexUserIndexRoute
  IndexVideoIndexRoute: typeof IndexVideoIndexRoute
}

const IndexRouteRouteChildren: IndexRouteRouteChildren = {
  IndexSettingRouteRoute: IndexSettingRouteRouteWithChildren,
  IndexIndexRoute: IndexIndexRoute,
  IndexHomeDetailRoute: IndexHomeDetailRoute,
  IndexAboutIndexRoute: IndexAboutIndexRoute,
  IndexDownloadIndexRoute: IndexDownloadIndexRoute,
  IndexFileIndexRoute: IndexFileIndexRoute,
  IndexHistoryIndexRoute: IndexHistoryIndexRoute,
  IndexHomeIndexRoute: IndexHomeIndexRoute,
  IndexMenuIndexRoute: IndexMenuIndexRoute,
  IndexScheduleIndexRoute: IndexScheduleIndexRoute,
  IndexSearchIndexRoute: IndexSearchIndexRoute,
  IndexSubscribeIndexRoute: IndexSubscribeIndexRoute,
  IndexUserIndexRoute: IndexUserIndexRoute,
  IndexVideoIndexRoute: IndexVideoIndexRoute,
}

const IndexRouteRouteWithChildren = IndexRouteRoute._addFileChildren(
  IndexRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof IndexRouteRouteWithChildren
  '/setting': typeof IndexSettingRouteRouteWithChildren
  '/': typeof IndexIndexRoute
  '/login': typeof LoginIndexRoute
  '/home/detail': typeof IndexHomeDetailRoute
  '/setting/app': typeof IndexSettingAppRoute
  '/setting/download': typeof IndexSettingDownloadRoute
  '/setting/file': typeof IndexSettingFileRoute
  '/setting/notify': typeof IndexSettingNotifyRoute
  '/about': typeof IndexAboutIndexRoute
  '/download': typeof IndexDownloadIndexRoute
  '/file': typeof IndexFileIndexRoute
  '/history': typeof IndexHistoryIndexRoute
  '/home': typeof IndexHomeIndexRoute
  '/menu': typeof IndexMenuIndexRoute
  '/schedule': typeof IndexScheduleIndexRoute
  '/search': typeof IndexSearchIndexRoute
  '/setting/': typeof IndexSettingIndexRoute
  '/subscribe': typeof IndexSubscribeIndexRoute
  '/user': typeof IndexUserIndexRoute
  '/video': typeof IndexVideoIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexIndexRoute
  '/login': typeof LoginIndexRoute
  '/home/detail': typeof IndexHomeDetailRoute
  '/setting/app': typeof IndexSettingAppRoute
  '/setting/download': typeof IndexSettingDownloadRoute
  '/setting/file': typeof IndexSettingFileRoute
  '/setting/notify': typeof IndexSettingNotifyRoute
  '/about': typeof IndexAboutIndexRoute
  '/download': typeof IndexDownloadIndexRoute
  '/file': typeof IndexFileIndexRoute
  '/history': typeof IndexHistoryIndexRoute
  '/home': typeof IndexHomeIndexRoute
  '/menu': typeof IndexMenuIndexRoute
  '/schedule': typeof IndexScheduleIndexRoute
  '/search': typeof IndexSearchIndexRoute
  '/setting': typeof IndexSettingIndexRoute
  '/subscribe': typeof IndexSubscribeIndexRoute
  '/user': typeof IndexUserIndexRoute
  '/video': typeof IndexVideoIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_index': typeof IndexRouteRouteWithChildren
  '/_index/setting': typeof IndexSettingRouteRouteWithChildren
  '/_index/': typeof IndexIndexRoute
  '/login/': typeof LoginIndexRoute
  '/_index/home/detail': typeof IndexHomeDetailRoute
  '/_index/setting/app': typeof IndexSettingAppRoute
  '/_index/setting/download': typeof IndexSettingDownloadRoute
  '/_index/setting/file': typeof IndexSettingFileRoute
  '/_index/setting/notify': typeof IndexSettingNotifyRoute
  '/_index/about/': typeof IndexAboutIndexRoute
  '/_index/download/': typeof IndexDownloadIndexRoute
  '/_index/file/': typeof IndexFileIndexRoute
  '/_index/history/': typeof IndexHistoryIndexRoute
  '/_index/home/': typeof IndexHomeIndexRoute
  '/_index/menu/': typeof IndexMenuIndexRoute
  '/_index/schedule/': typeof IndexScheduleIndexRoute
  '/_index/search/': typeof IndexSearchIndexRoute
  '/_index/setting/': typeof IndexSettingIndexRoute
  '/_index/subscribe/': typeof IndexSubscribeIndexRoute
  '/_index/user/': typeof IndexUserIndexRoute
  '/_index/video/': typeof IndexVideoIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/setting'
    | '/'
    | '/login'
    | '/home/detail'
    | '/setting/app'
    | '/setting/download'
    | '/setting/file'
    | '/setting/notify'
    | '/about'
    | '/download'
    | '/file'
    | '/history'
    | '/home'
    | '/menu'
    | '/schedule'
    | '/search'
    | '/setting/'
    | '/subscribe'
    | '/user'
    | '/video'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/home/detail'
    | '/setting/app'
    | '/setting/download'
    | '/setting/file'
    | '/setting/notify'
    | '/about'
    | '/download'
    | '/file'
    | '/history'
    | '/home'
    | '/menu'
    | '/schedule'
    | '/search'
    | '/setting'
    | '/subscribe'
    | '/user'
    | '/video'
  id:
    | '__root__'
    | '/_index'
    | '/_index/setting'
    | '/_index/'
    | '/login/'
    | '/_index/home/detail'
    | '/_index/setting/app'
    | '/_index/setting/download'
    | '/_index/setting/file'
    | '/_index/setting/notify'
    | '/_index/about/'
    | '/_index/download/'
    | '/_index/file/'
    | '/_index/history/'
    | '/_index/home/'
    | '/_index/menu/'
    | '/_index/schedule/'
    | '/_index/search/'
    | '/_index/setting/'
    | '/_index/subscribe/'
    | '/_index/user/'
    | '/_index/video/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRouteRoute: typeof IndexRouteRouteWithChildren
  LoginIndexRoute: typeof LoginIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRouteRoute: IndexRouteRouteWithChildren,
  LoginIndexRoute: LoginIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_index",
        "/login/"
      ]
    },
    "/_index": {
      "filePath": "_index/route.tsx",
      "children": [
        "/_index/setting",
        "/_index/",
        "/_index/home/detail",
        "/_index/about/",
        "/_index/download/",
        "/_index/file/",
        "/_index/history/",
        "/_index/home/",
        "/_index/menu/",
        "/_index/schedule/",
        "/_index/search/",
        "/_index/subscribe/",
        "/_index/user/",
        "/_index/video/"
      ]
    },
    "/_index/setting": {
      "filePath": "_index/setting/route.tsx",
      "parent": "/_index",
      "children": [
        "/_index/setting/app",
        "/_index/setting/download",
        "/_index/setting/file",
        "/_index/setting/notify",
        "/_index/setting/"
      ]
    },
    "/_index/": {
      "filePath": "_index/index.tsx",
      "parent": "/_index"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/_index/home/detail": {
      "filePath": "_index/home/detail.tsx",
      "parent": "/_index"
    },
    "/_index/setting/app": {
      "filePath": "_index/setting/app.tsx",
      "parent": "/_index/setting"
    },
    "/_index/setting/download": {
      "filePath": "_index/setting/download.tsx",
      "parent": "/_index/setting"
    },
    "/_index/setting/file": {
      "filePath": "_index/setting/file.tsx",
      "parent": "/_index/setting"
    },
    "/_index/setting/notify": {
      "filePath": "_index/setting/notify.tsx",
      "parent": "/_index/setting"
    },
    "/_index/about/": {
      "filePath": "_index/about/index.tsx",
      "parent": "/_index"
    },
    "/_index/download/": {
      "filePath": "_index/download/index.tsx",
      "parent": "/_index"
    },
    "/_index/file/": {
      "filePath": "_index/file/index.tsx",
      "parent": "/_index"
    },
    "/_index/history/": {
      "filePath": "_index/history/index.tsx",
      "parent": "/_index"
    },
    "/_index/home/": {
      "filePath": "_index/home/index.tsx",
      "parent": "/_index"
    },
    "/_index/menu/": {
      "filePath": "_index/menu/index.tsx",
      "parent": "/_index"
    },
    "/_index/schedule/": {
      "filePath": "_index/schedule/index.tsx",
      "parent": "/_index"
    },
    "/_index/search/": {
      "filePath": "_index/search/index.tsx",
      "parent": "/_index"
    },
    "/_index/setting/": {
      "filePath": "_index/setting/index.tsx",
      "parent": "/_index/setting"
    },
    "/_index/subscribe/": {
      "filePath": "_index/subscribe/index.tsx",
      "parent": "/_index"
    },
    "/_index/user/": {
      "filePath": "_index/user/index.tsx",
      "parent": "/_index"
    },
    "/_index/video/": {
      "filePath": "_index/video/index.tsx",
      "parent": "/_index"
    }
  }
}
ROUTE_MANIFEST_END */
